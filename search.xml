<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux的常规命令</title>
      <link href="/2021/10/20/Linux%E5%B8%B8%E8%A7%84%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/10/20/Linux%E5%B8%B8%E8%A7%84%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<ul><li>磁盘空间大小</li></ul><pre class="line-numbers language-none"><code class="language-none">dfdf 以磁盘分区为单位查看文件系统，可以获取硬盘被占用了多少空间，目前还剩下多少空间等信息。df -hl：查看磁盘剩余空间df -h：查看每个根路径的分区大小du -sh [目录名]：返回该目录的大小du -sm [文件夹]：返回该文件夹总M数du -h [目录名]：查看指定文件夹下的所有文件大小（包含子文件夹）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="C:\Users\17292\AppData\Roaming\Typora\typora-user-images\image-20211011152719555.png" alt="image-20211011152719555"></p><p>内存大小</p><pre class="line-numbers language-none"><code class="language-none">显示文件使用空间：du例如，以 M 为单位显示内存使用情况：free -mfree -h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>vim编辑</p><pre class="line-numbers language-none"><code class="language-none">:q! 退出不保存:wq! 保存退出从开头搜索在命令模式下，输入&#x2F;你要查找的字符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>删除</p><pre class="line-numbers language-none"><code class="language-none">rm -f + 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解压</p><pre class="line-numbers language-none"><code class="language-none">tar -zxvf +文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>查进程</li></ul><pre class="line-numbers language-none"><code class="language-none">ps -ef|grep rediskill -9 pid <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>后台并 重定向日志</li></ul><pre class="line-numbers language-none"><code class="language-none">nohup java -jar xxxx &gt; log.txt &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql的sql语法</title>
      <link href="/2021/10/20/mysql%E7%9A%84sql%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/10/20/mysql%E7%9A%84sql%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<ul><li>语法 case when用法</li></ul><pre class="line-numbers language-none"><code class="language-none">简单函数   类似于 switch 函数   SELECT*,CASE compareWHEN &#39;L&#39; THEN &#39;大于&#39;WHEN &#39;LE&#39; THEN &#39;大于等于&#39;ELSE &#39;无&#39;END &#39;com&#39;FROMbase_warn_config搜索函数  SELECT*,CASE WHEN val&lt;10 THEN &#39;大于&#39;WHEN val&lt;60 THEN &#39;大于等于&#39;WHEN val&gt;160 THEN &#39;大于等于&#39;ELSE &#39;无&#39;END &#39;com&#39;FROMbase_warn_config简单函数CASE [col_name] WHEN [value1] THEN [result1]…ELSE [default] END搜索函数CASE WHEN [expr] THEN [result1]…ELSE [default] END<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>时间函数  DATE_ADD(date,INTERVAL expr unit) </li></ul><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 得到当前时间增加1个小时的结果select date_add(now(),interval 1 hour)&#x2F;&#x2F; 得到当前时间增加1天的结果select date_add(now(),interval 1 day)&#x2F;&#x2F; 得到当前时间减少72个小时的结果select date_add(now(),interval -72 hour)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>用转义字符把”&gt;“和”&lt;”替换掉，就没有问题了。<br>mapper文件示例代码:</li></ul><pre class="line-numbers language-none"><code class="language-none">&lt;if test&#x3D;&quot;startTime !&#x3D; null &quot;&gt;    AND order_date &gt;&#x3D; #&#123;startTime,jdbcType&#x3D;DATE&#125; &lt;&#x2F;if&gt;&lt;if test&#x3D;&quot;endTime !&#x3D; null &quot;&gt;    AND order_date &lt;&#x3D; #&#123;endTime,jdbcType&#x3D;DATE&#125; &lt;&#x2F;if&gt;123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">方法一：使用特殊转义字符例如，&gt;&#x3D;开始日期 并且&lt;&#x3D;结束日期&gt;  &gt;  大于号 &lt;  &lt;  小于号     &lt;if test&#x3D;&quot;searchTimeBegin !&#x3D; null and searchTimeBegin !&#x3D; &#39;&#39;&quot;&gt;       AND tcci.consume_time &gt;&#x3D; CONCAT(#&#123;searchTimeBegin&#125;,&#39; 00:00:00&#39;)   &lt;&#x2F;if&gt;   &lt;if test&#x3D;&quot;searchTimeEnd !&#x3D; null and searchTimeEnd !&#x3D; &#39;&#39;&quot;&gt;       AND tcci.consume_time &lt;&#x3D; CONCAT(#&#123;searchTimeEnd&#125;,&#39; 23:59:59&#39;)   &lt;&#x2F;if&gt;   方法二：使用&lt;![CDATA[ ]]&gt;符号这里面的内容将不被解析    &lt;if test&#x3D;&quot;beginTime!&#x3D;null&quot;&gt;      AND DATE (os.show_start_time) &gt;&#x3D; DATE(#&#123;beginTime&#125;)    &lt;&#x2F;if&gt;    &lt;if test&#x3D;&quot;endTime!&#x3D;null&quot;&gt;      AND DATE (os.show_start_time) &lt;![CDATA[&lt;&#x3D;]]&gt; DATE(#&#123;endTime&#125;)    &lt;&#x2F;if&gt;在mybatis中&lt;&#x3D;不能使用，需要使用上面任意一种方法转义，但是&gt;&#x3D;可以使用！原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;n950814abc&#x2F;article&#x2F;details&#x2F;83182239<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>load data 导入文件</li></ul><pre class="line-numbers language-none"><code class="language-none"> &lt;select id&#x3D;&quot;insertText&quot; parameterType&#x3D;&quot;java.lang.String&quot; &gt;            LOAD DATA INFILE #&#123;fileUrl&#125; INTO TABLE &#96;user&#96; CHARACTER            SET utf8            FIELDS TERMINATED BY &#39;,&#39;            OPTIONALLY ENCLOSED BY &#39;&#39;            LINES TERMINATED BY &#39;\n&#39;            (id, username, password)    &lt;&#x2F;select&gt;            load data local infile &#39;D:&#x2F;my_user_info.txt&#39; into table user_info    CHARACTER SET utf8 -- 可选，避免中文乱码问题    FIELDS TERMINATED BY &#39;||&#39; -- 字段分隔符，每个字段(列)以什么字符分隔，默认是 \tOPTIONALLY ENCLOSED BY &#39;&#39; -- 文本限定符，每个字段被什么字符包围，默认是空字符    LINES TERMINATED BY &#39;\n&#39; -- 记录分隔符，如字段本身也含\n，那么应先去除，否则load data 会误将其视作另一行记录进行导入    (id, name, age, address, create_date) -- 每一行文本按顺序对应的表字段，建议不要省略————————————————。原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_29308413&#x2F;article&#x2F;details&#x2F;109390444<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>mybatis xml 文件关键标签用法</li><li>trim 标签</li></ul><pre class="line-numbers language-none"><code class="language-none">&lt; trim&gt;标签&lt; trim &gt; : 是一个格式化的标记，可以完成set或者是where标记的功能。示例1：　　　select * from user 　　&lt;trim prefix&#x3D;&quot;WHERE&quot; prefixoverride&#x3D;&quot;AND |OR&quot;&gt;　　　　&lt;if test&#x3D;&quot;name !&#x3D; null and name.length()&gt;0&quot;&gt; AND name&#x3D;#&#123;name&#125;&lt;&#x2F;if&gt;　　　　&lt;if test&#x3D;&quot;age !&#x3D; null and age.length()&gt;0&quot;&gt; AND age&#x3D;#&#123;age&#125;&lt;&#x2F;if&gt;　　&lt;&#x2F;trim&gt;假如说name和age的值都不为null的话打印的SQL为：select * from user where name &#x3D; ‘xx’ and age &#x3D; ‘xx’在where的后面是不存在第一个and的，上面两个属性的意思如下：　　prefix：前缀　　　　　　　　prefixoverride：去掉第一个and或者是or示例2：　　update user　　&lt;trim prefix&#x3D;&quot;set&quot; suffixoverride&#x3D;&quot;,&quot; suffix&#x3D;&quot; where id &#x3D; #&#123;id&#125; &quot;&gt;　　　　&lt;if test&#x3D;&quot;name !&#x3D; null and name.length()&gt;0&quot;&gt; name&#x3D;#&#123;name&#125; , &lt;&#x2F;if&gt;　　　　&lt;if test&#x3D;&quot;age!&#x3D; null and age.length()&gt;0&quot;&gt; age&#x3D;#&#123;age&#125; ,  &lt;&#x2F;if&gt;　　&lt;&#x2F;trim&gt;假如说name和age的值都不为null的话打印的SQL为：update user set name&#x3D;‘xx’ , age&#x3D;‘xx’ where id&#x3D;‘x’在age&#x3D;&#39;xx’的后面不存在逗号，而且自动加了一个set前缀和where后缀，上面三个属性的意义如下，其中prefix意义如上：　　 suffixoverride：去掉最后一个逗号（也可以是其他的标记，就像是上面前缀中的and一样）　 　suffix：后缀<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>foreach 标签</li></ul><pre class="line-numbers language-none"><code class="language-none">foreach 标签foreach标签经常用于遍历集合，构建in条件语句或者批量操作语句。foreach：collection：指定要遍历的集合（list类型的参数会特殊处理封装在map中，map的key就叫listitem：将当前遍历出的元素赋值给指定的变量separator：每个元素之间的分隔符open：遍历出所有结果拼接一个开始的字符串close：遍历出所有结果拼接一个结束的字符串index：遍历list的时候，index就是索引，item就是当前值      遍历map的时候，index就是map的key，item就是map[key]的值#&#123;变量名&#125;就能取出变量的值也就是当前遍历出的元素&lt;select id&#x3D;&quot;getEmpsByConditionForeach&quot; resultType&#x3D;&quot;com.caochenlei.mybatis.crud.Employee&quot;&gt;select * from employee&lt;foreach collection&#x3D;&quot;ids&quot; item&#x3D;&quot;item_id&quot; separator&#x3D;&quot;,&quot; open&#x3D;&quot;where id in(&quot; close&#x3D;&quot;)&quot;&gt;#&#123;item_id&#125;&lt;&#x2F;foreach&gt;&lt;&#x2F;select&gt;&lt;insert id&#x3D;&quot;addEmps&quot;&gt;insert into employee (id,last_name,email,gender,dep_id) values&lt;foreach collection&#x3D;&quot;emps&quot; item&#x3D;&quot;emp&quot; separator&#x3D;&quot;,&quot;&gt;(#&#123;emp.id&#125;,#&#123;emp.lastName&#125;,#&#123;emp.email&#125;,#&#123;emp.gender&#125;,#&#123;emp.dep.depId&#125;)&lt;&#x2F;foreach&gt;&lt;&#x2F;insert&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> nivacat </tag>
            
            <tag> mybatis xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>workdetail</title>
      <link href="/2021/10/20/workdetail/"/>
      <url>/2021/10/20/workdetail/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="fd057dd346a499ba74e603f599cb1f22a7c1fa5352df93d5453ca8d63ab8f03c">43559e372561815d69b04369f4efd550f9ee77a792c9215caf24d1d1d0cf0394112c2173aeee78be7d0564dbf9ee8225c462399f57f98bba65b007bc18bd9f847cc4659913e19609f4cfd284617e3ca9693ee5029d3fc8caf3ff00680e1d0b13d99db3896ce4edc0243f5b2c051361bc42f3694c83394c448985749ff638a6ec1d6ad128bee998844f013a04afbecc7ac0017fd11e56ef341fa2b1b31ce6419a58cd216ba27be03aa134aedc340692bcd5049b813f19f4f05ea343af96eb10d7ee9737ba6da9e929cd53e2902d374b4005919540c8eb67f468bdde8a6594f82785f1f983a6f3caf3db81c74d7374584b85d99f86a1b506c3bea8f88f144a90e40091d5fc00343970fc970b79f6e0028d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> work </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
